<template class="template">
    <el-row :gutter="20">
        <el-col :span="12">
            <el-form label-width="80px">
                <el-form-item label="名称">
                    <el-input v-model="form.name"></el-input>
                </el-form-item>
                <el-form-item label="类型">
                    <el-select v-model="form.type">
                        <el-option v-for="(item, i) in types" :key="i" :label="item.label" :value="item.label"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" @click="onSubmit">发送</el-button>
                </el-form-item>
            </el-form>
        </el-col>
        <el-col :span="12">
            <el-table :data="table" style="width: 100%" 　height="240">
                <el-table-column prop="name" label="名称" width="60">
                </el-table-column>
                <el-table-column prop="type" label="类型" width="100">
                </el-table-column>
                <el-table-column prop="req_time" label="发送时间">
                </el-table-column>
                <el-table-column prop="res_time" label="响应时间">
                </el-table-column>
                <el-table-column prop="time_consuming" label="时长(秒)"></el-table-column>
            </el-table>
        </el-col>
    </el-row>
</template>
<script>
    const types = Array.apply(null, { length: 6 }).map((a, i) => {
        return {
            label: `类型${i}`,
            val: i
        }
    })
    new Vue({
        el: '#app',
        template: $('.template').innerHTML,
        methods: {
            onMsg(event) {
                console.log('onMsg', event)
                const { data } = event
                data.time_consuming = (data.res_time - data.req_time) / 1000
                this.table.push(event.data)
            },
            onErr(err) {
                console.log('onErr', err)
            },
            onSubmit() {
                this.worker.postMessage(this.form)
            }
        },
        mounted() {
            // 初始化worker
            const currWorker = new Worker('/demo/es5/worker/test1.js')
            currWorker.onmessage = this.onMsg
            currWorker.onerror = this.onErr
            this.worker = currWorker
        },
        data() {
            return {
                worker: null,
                types,
                form: {},
                table: []
            }
        }
    })
</script>
